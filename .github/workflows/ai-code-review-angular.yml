# Reusable workflow (single source of truth). No inputs; all config centralized here.
name: Codex AI Code Review (Angular)

on:
  workflow_call: {}
  workflow_dispatch:  # Allow manual run

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ai-review-angular-${{ github.repository }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  ai_review:
    name: AI Code Review
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      AI_PROVIDER: openai
      AI_TEMPERATURE: "0.3"
      MAX_COMMENTS: "12"
      APPROVE_REVIEWS: "false"

      EXCLUDE_PATTERNS: >-
        **/*.lock,**/*.json,**/*.md,**/*.yml,**/*.yaml,
        **/dist/**,**/storybook-static/**,**/coverage/**,
        **/*.spec.ts,**/*.stories.ts,**/__snapshots__/**,
        **/*.svg,**/*.png,**/*.jpg,**/*.jpeg,**/*.gif,**/*.mp4,
        **/e2e/**

      PROJECT_CONTEXT: |
        This is an Angular (TypeScript) monorepo.
        - Angular 9.1 with SCSS
        - Uses NGRX, Angular Material
        - Avoid inline styles
        - Ensure a11y compliance and performance best practices

      MAX_FILE_BYTES: "20000"   # 20 KB cutoff

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Detect relevant changes
        id: changes
        run: |
          git fetch origin ${{ github.base_ref }} --quiet || true
          if git diff --quiet origin/${{ github.base_ref }}...HEAD -- src/ libs/ apps/; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Build payload and split into chunks
        if: steps.changes.outputs.no_changes == 'false'
        id: payload
        run: |
          set -euo pipefail
          git fetch origin ${{ github.base_ref }} --depth=1 --quiet

          : > payload.txt
          counted=0
          total_bytes=0
          large=false

          for f in $(git diff --name-only origin/${{ github.base_ref }}...HEAD -- src/ libs/ apps/); do
            [ -f "$f" ] || continue
            sz=$(wc -c <"$f" | tr -d ' ')
            total_bytes=$((total_bytes + sz))
            if [ "$sz" -gt "${{ env.MAX_FILE_BYTES }}" ]; then
              echo "### Diff for $f" >> payload.txt
              git diff -U3 origin/${{ github.base_ref }}...HEAD -- "$f" >> payload.txt
              large=true
            else
              echo "### Full content of $f" >> payload.txt
              cat "$f" >> payload.txt
            fi
            counted=$((counted + 1))
          done

          # Rough estimate of total tokens
          estimated_tokens=$(( (total_bytes / 4) * 2 + 1500 ))

          # ✅ Decide model based on size of entire PR
          if [ "$estimated_tokens" -gt 25000 ] || [ "$large" = "true" ]; then
            model="${{ vars.AI_MODEL_4_MINI }}"
          else
            model="${{ vars.AI_MODEL_4 }}"
          fi

          mkdir chunks
          split -l 8000 payload.txt chunks/chunk_

          echo "selected_model=$model" >> $GITHUB_OUTPUT
          echo "files_count=$counted"  >> $GITHUB_OUTPUT
          echo "estimated_tokens=$estimated_tokens" >> $GITHUB_OUTPUT
          echo "chunk_count=$(ls chunks | wc -l)" >> $GITHUB_OUTPUT

          {
            echo "### AI Review Preflight (Angular)"
            echo "- Files counted: **$counted**"
            echo "- Estimated tokens: **$estimated_tokens**"
            echo "- Selected model: **$model**"
            echo "- Chunks created: **$(ls chunks | wc -l)**"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Run AI Code Review per chunk
        if: steps.payload.outputs.files_count != '0'
        uses: Eshopbox-Enginnering/ai-codereviewer@main
        with:
          GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
          AI_PROVIDER:    ${{ env.AI_PROVIDER }}
          AI_API_KEY:     ${{ secrets.AI_REVIEW_CODEX }}
          AI_MODEL:       ${{ steps.payload.outputs.selected_model }}
          AI_TEMPERATURE: ${{ env.AI_TEMPERATURE }}
          APPROVE_REVIEWS: ${{ env.APPROVE_REVIEWS }}
          MAX_COMMENTS:   ${{ env.MAX_COMMENTS }}
          PROJECT_CONTEXT: ${{ env.PROJECT_CONTEXT }}
          EXCLUDE_PATTERNS: ${{ env.EXCLUDE_PATTERNS }}
          FILES:          chunks/*

      - name: Skip log message
        if: steps.changes.outputs.no_changes == 'true'
        run: echo "✅ No relevant Angular code changes — skipping AI review."
