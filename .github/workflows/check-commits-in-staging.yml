name: Check PR commits exist in staging

on:
  workflow_call:
    inputs:
      compare_branch:
        description: Branch that must already contain the commits
        required: false
        default: staging
        type: string

jobs:
  check-commits:
    # run only if base is master or main
    if: ${{ contains('master,main', github.base_ref) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: verify
        name: Verify all PR commits exist in compare branch
        env:
          BASE: ${{ github.base_ref }}            # master or main at runtime
          COMPARE: ${{ inputs.compare_branch }}  # typically "staging"
        shell: bash
        run: |
          set -euo pipefail
          echo "Base: $BASE | Compare: $COMPARE"
          git fetch origin "$COMPARE" --quiet
          
          # Commits in PR head that aren't in the compare (staging)
          PR_COMMITS=$(git log "origin/${COMPARE}..HEAD" --pretty=format:"%H" || true)

          if [ -n "${PR_COMMITS:-}" ]; then
            echo "::error::These commits are not in ${COMPARE}:"
            while IFS= read -r commit; do
              echo "::error::Commit missing in ${COMPARE}: $commit"
            done <<< "$PR_COMMITS"

            # Export PR_COMMITS for next step
            echo "pr_commits<<EOF" >> $GITHUB_OUTPUT
            echo "$PR_COMMITS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT

            exit 1
          else
            echo "✅ All commits are present in ${COMPARE}"
          fi

      - name: Comment on PR with missing commits
        if: failure() && steps.verify.outputs.pr_commits != ''
        uses: actions/github-script@v7
        with:
          script: |
            const missing = `${{ steps.verify.outputs.pr_commits }}`;
            const compare = process.env.COMPARE;
            const body = `❌ The following commits are missing in \`${compare}\`:\n\n${missing.split("\n").map(c => `- ${c}`).join("\n")}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
        env:
          COMPARE: ${{ inputs.compare_branch }}
