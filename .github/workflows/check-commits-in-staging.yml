name: Check PR commits exist in staging

on:
  workflow_call:
    inputs:
      compare_branch:
        description: Branch that must already contain the commits
        required: false
        default: staging
        type: string
    outputs:
      pr_commits:
        description: "List of commits missing in compare branch"
        value: ${{ jobs.check-commits.outputs.pr_commits }}

  pull_request:
    branches:
      - main
      - master
      - Master
      - Main

  push:
    branches:
      - staging

jobs:
  check-commits:
    if: ${{ github.event_name == 'workflow_call' || github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/staging') }}
    runs-on: ubuntu-latest
    outputs:
      pr_commits: ${{ steps.verify.outputs.pr_commits }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: verify
        name: Verify all PR commits exist in compare branch
        env:
          BASE: ${{ github.base_ref }}
          SOURCE: ${{ github.event.pull_request.head.ref }}
          COMPARE: ${{ inputs.compare_branch || 'staging' }}
          REPO: ${{ github.repository }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Base: $BASE | Source: $SOURCE | Compare: $COMPARE"
          git fetch origin "$COMPARE" --quiet
          git fetch origin "$SOURCE" --quiet

          # Get commits unique to source branch compared to staging
          PR_COMMITS=$(git log origin/${COMPARE}..origin/${SOURCE} --pretty=format:"%H" || true)

          echo "Commits in PR source branch not in $COMPARE yet:"
          echo "$PR_COMMITS"

          MISSING=""
          for commit in $PR_COMMITS; do
            if ! git branch --remotes --contains "$commit" | grep -q "origin/${COMPARE}"; then
              MISSING+="$commit"$'\n'
            fi
          done

          if [ -n "${MISSING:-}" ]; then
            echo "::error::❌ The following commits are not in ${COMPARE}:"
            while IFS= read -r commit; do
              SHORT_SHA=$(echo "$commit" | cut -c1-7)
              URL="https://github.com/$REPO/commit/$commit"
              echo "::error file=Commit::$SHORT_SHA::${SHORT_SHA} missing in $COMPARE → $URL"
            done <<< "$MISSING"

            {
              echo "pr_commits<<EOF"
              echo "$MISSING"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"

            exit 1
          else
            echo "✅ All PR commits are already in ${COMPARE}"
          fi
