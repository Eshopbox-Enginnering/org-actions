name: PR Test File Validation

on:
  workflow_call: {}
  pull_request:
    branches:
      - 'feature/**'
      - 'Feature/**'
      - 'FEATURE/**'
      - 'staging'
      - 'main'
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: test-validation-${{ github.repository }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  validate-tests:
    name: Validate PR Test Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine repository type and bypass (static list only)
        id: repo_check
        run: |
          set -euo pipefail
          REPO="${{ github.repository }}"
          echo "Repository: ${REPO}"

          # === STATIC BYPASS LIST ===
          # Add repo names here (format: Owner/Repo)
          BYPASS_LIST=(
            "Eshopbox-Enginnering/poe-frontend"
            "Eshopbox-Enginnering/amzWholesale-Warehouse-Portal-Frontend"
            "Eshopbox-Enginnering/org-actions"
            "Eshopbox-Enginnering/eshopbox-wms-api"
            "Eshopbox-Enginnering/clickpost-microservice"
            "Eshopbox-Enginnering/eshopbox-wms-middleware"
            "Eshopbox-Enginnering/unicommerce-microservice"
            "Eshopbox-Enginnering/unicommerce-inventory-microservice"
            "Eshopbox-Enginnering/eshopbox-wms-backend"
            "Eshopbox-Enginnering/myntra-microservices"
            "Eshopbox-Enginnering/scan-label"
            "Eshopbox-Enginnering/eshopbox-client-services"
          )

          for b in "${BYPASS_LIST[@]}"; do
            if [[ "${REPO}" == "${b}" ]]; then
              echo "Detected repo in hard bypass list: ${REPO}"
              echo "bypass=true" >> "$GITHUB_OUTPUT"
              echo "type=none" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          done

          # If this is the special Angular repo, mark it angular
          if [[ "${REPO}" == "Eshopbox-Enginnering/eshopbox-client-portal-frontend" ]]; then
            echo "type=angular" >> "$GITHUB_OUTPUT"
            echo "bypass=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Default: treat as java repo
          echo "type=java" >> "$GITHUB_OUTPUT"
          echo "bypass=false" >> "$GITHUB_OUTPUT"

      - name: Skip validation (bypassed repo)
        if: steps.repo_check.outputs.bypass == 'true'
        run: |
          echo "‚úÖ Repo in static bypass list. Skipping test validation."

      ############################
      # Angular validation block #
      ############################
      - name: Validate Angular test changes (eshopbox-client-portal-frontend)
        if: steps.repo_check.outputs.type == 'angular' && steps.repo_check.outputs.bypass != 'true'
        run: |
          set -euo pipefail
          git fetch origin ${{ github.base_ref }} --quiet || true
          git diff --name-only origin/${{ github.base_ref }}...HEAD -- src/ libs/ apps/ > changed_files.txt || true

          echo "üîç Changed files:"
          cat changed_files.txt || true

          # Detect changed Angular logic files excluding spec files
          FILES=$(grep -E '\.(component|service|pipe|directive)\.ts$' changed_files.txt | grep -v '\.spec\.ts$' || true)

          if [ -z "$FILES" ]; then
            echo "‚úÖ No Angular logic files changed."
            exit 0
          fi

          echo "üß© Files requiring a matching .spec.ts:"
          echo "$FILES"

          MISSING=0
          for f in $FILES; do
            dir=$(dirname "$f")
            base=$(basename "$f" .ts)
            test_file="$dir/${base}.spec.ts"
            if ! grep -qF "$test_file" changed_files.txt; then
              echo "::error::Missing test for ${f}"
              MISSING=$((MISSING+1))
            else
              echo "‚úÖ Test present for ${f}"
            fi
          done

          if [ "${MISSING}" -gt 0 ]; then
            echo "::error::‚ö†Ô∏è Test case enforcement failed: Angular files changed without matching .spec.ts updates."
            exit 1
          else
            echo "‚úÖ All modified Angular files have matching .spec.ts updates."
          fi

      #########################
      # Java validation block #
      #########################
      - name: Validate Java test changes (default)
        if: steps.repo_check.outputs.type == 'java' && steps.repo_check.outputs.bypass != 'true'
        run: |
          set -euo pipefail
          git fetch origin ${{ github.base_ref }} --quiet || true
          git diff --name-only origin/${{ github.base_ref }}...HEAD -- src/main/java/ src/test/java/ > changed_files.txt || true

          echo "üîç Changed files:"
          cat changed_files.txt || true

          # list changed source files (exclude test files)
          FILES=$(grep '^src/main/java/.*\.java$' changed_files.txt | grep -v -E '(Test|Tests|IT)\.java$' || true)

          if [ -z "$FILES" ]; then
            echo "‚úÖ No Java source files changed."
            exit 0
          fi

          echo "üß© Java source files requiring matching tests:"
          echo "$FILES"

          MISSING=0
          for f in $FILES; do
            relative=${f#src/main/java/}
            test1="src/test/java/${relative%.java}Test.java"
            test2="src/test/java/${relative%.java}Tests.java"
            test3="src/test/java/${relative%.java}IT.java"
            if grep -qF "$test1" changed_files.txt || grep -qF "$test2" changed_files.txt || grep -qF "$test3" changed_files.txt; then
              echo "‚úÖ Test present for ${f}"
            else
              echo "::error::Missing test for ${f}"
              MISSING=$((MISSING+1))
            fi
          done

          if [ "${MISSING}" -gt 0 ]; then
            echo "::error::‚ö†Ô∏è Test case enforcement failed: Java source files changed without matching test updates under src/test/java."
            exit 1
          else
            echo "‚úÖ All modified Java classes have matching test updates."
          fi

      - name: All checks passed
        if: steps.repo_check.outputs.bypass != 'true'
        run: echo "‚úÖ Test validation passed (or no relevant changes)."