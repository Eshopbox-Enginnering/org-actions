name: Validate PR Test Coverage

on:
  pull_request:
    branches:
      - 'feature/**'
      - 'Feature/**'
      - 'FEATURE/**'
      - 'staging'
      - 'main'

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine repository type and bypass
        id: repo_check
        run: |
          REPO="${{ github.repository }}"
          echo "Repository: $REPO"

          BYPASS_LIST=(
            "Eshopbox-Enginnering/poe-frontend"
            "Eshopbox-Enginnering/amzWholesale-Warehouse-Portal-Frontend"
            "Eshopbox-Enginnering/eshopbox-wms-api"
            "Eshopbox-Enginnering/clickpost-microservice"
            "Eshopbox-Enginnering/eshopbox-wms-middleware"
            "Eshopbox-Enginnering/unicommerce-microservice"
            "Eshopbox-Enginnering/unicommerce-inventory-microservice"
            "Eshopbox-Enginnering/eshopbox-wms-backend"
            "Eshopbox-Enginnering/myntra-microservices"
            "Eshopbox-Enginnering/scan-label"
            "Eshopbox-Enginnering/eshopbox-client-services"
            "Eshopbox-Enginnering/org-actions"
          )

          if printf '%s\n' "${BYPASS_LIST[@]}" | grep -q "^$REPO$"; then
            echo "bypass=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Repo is bypassed."
          elif [ "$REPO" == "Eshopbox-Enginnering/eshopbox-client-portal-frontend" ]; then
            echo "type=angular" >> $GITHUB_OUTPUT
          else
            echo "type=java" >> $GITHUB_OUTPUT
          fi

      - name: Skip validation for bypassed repos
        if: steps.repo_check.outputs.bypass == 'true'
        run: echo "‚úÖ Skipping validation for bypassed repo."

      ####################################
      # Angular validation
      ####################################
      - name: Validate Angular test changes
        id: angular_check
        if: steps.repo_check.outputs.type == 'angular' && steps.repo_check.outputs.bypass != 'true'
        continue-on-error: true   # don't stop job; we‚Äôll fail later
        run: |
          set -euo pipefail
          git fetch origin ${{ github.base_ref }} --quiet || true
          git diff --name-only origin/${{ github.base_ref }}...HEAD -- src/ libs/ apps/ > changed_files.txt || true

          echo "üîç Changed files:"
          cat changed_files.txt || true

          FILES=$(grep -E '\.(component|service|pipe|directive)\.ts$' changed_files.txt | grep -v '\.spec\.ts$' || true)

          if [ -z "$FILES" ]; then
            echo "‚úÖ No Angular logic files changed."
            echo "TESTS_FOUND=true" >> $GITHUB_ENV
            exit 0
          fi

          echo "üß© Files requiring .spec.ts:"
          echo "$FILES"

          MISSING=0
          for f in $FILES; do
            dir=$(dirname "$f")
            base=$(basename "$f" .ts)
            test_file="$dir/${base}.spec.ts"
            if ! grep -qF "$test_file" changed_files.txt; then
              echo "‚ùå Missing test for $f"
              MISSING=$((MISSING+1))
            fi
          done

          if [ "$MISSING" -gt 0 ]; then
            echo "Angular test validation failed: $MISSING missing"
            echo "TESTS_FOUND=false" >> $GITHUB_ENV
            exit 1
          else
            echo "‚úÖ All modified Angular files have tests."
            echo "TESTS_FOUND=true" >> $GITHUB_ENV
          fi

      - name: Comment on PR ‚Äî Angular missing tests
        if: always() && steps.angular_check.outcome == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ‚ö†Ô∏è **Test file missing in PR**
            Some Angular files were changed without corresponding `.spec.ts` test updates.  
            Please add or update the required test files before merging.

      - name: Fail workflow if Angular validation failed
        if: steps.angular_check.outcome == 'failure'
        run: |
          echo "‚ùå Failing because Angular test validation failed."
          exit 1

      ####################################
      # Java validation (focused on DAO, Service, Endpoint, Controller)
      ####################################
      - name: Validate Java test changes
        id: java_check
        if: steps.repo_check.outputs.type == 'java' && steps.repo_check.outputs.bypass != 'true'
        continue-on-error: true
        run: |
          set -euo pipefail
          git fetch origin ${{ github.base_ref }} --quiet || true
          git diff --name-only origin/${{ github.base_ref }}...HEAD -- src/main/java/ src/test/java/ > changed_files.txt || true

          echo "üîç Changed files:"
          cat changed_files.txt || true

          # Only consider key logic layers for validation
          FILES=$(grep -E '^src/main/java/.*/(dao|service|endpoint|controller)/.*\.java$' changed_files.txt | grep -v -E '(Test|Tests|IT)\.java$' || true)

          if [ -z "$FILES" ]; then
            echo "‚úÖ No relevant Java (DAO/Service/Endpoint/Controller) files changed."
            echo "TESTS_FOUND=true" >> $GITHUB_ENV
            exit 0
          fi

          echo "üß© Files requiring test validation:"
          echo "$FILES"

          MISSING=0
          for f in $FILES; do
            # Dynamically derive test path relative to src/main/java/
            rel_path=$(echo "$f" | sed 's|^src/main/java/||')
            t1="src/test/java/${rel_path%.java}Test.java"
            t2="src/test/java/${rel_path%.java}Tests.java"
            t3="src/test/java/${rel_path%.java}IT.java"

            if grep -qF "$t1" changed_files.txt || grep -qF "$t2" changed_files.txt || grep -qF "$t3" changed_files.txt; then
              echo "‚úÖ Found test for $f"
            else
              echo "‚ùå Missing test for $f"
              MISSING=$((MISSING+1))
            fi
          done

          if [ "$MISSING" -gt 0 ]; then
            echo "Java test validation failed: $MISSING missing"
            echo "TESTS_FOUND=false" >> $GITHUB_ENV
            exit 1
          else
            echo "‚úÖ All modified Java (DAO/Service/Endpoint/Controller) files have tests."
            echo "TESTS_FOUND=true" >> $GITHUB_ENV
          fi

      - name: Comment on PR ‚Äî Java missing tests
        if: always() && steps.java_check.outcome == 'failure'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ‚ö†Ô∏è **Test file missing in PR**
            Some Java files were changed without corresponding test updates under `src/test/java`.  
            Please add or update the required test files before merging.

      - name: Fail workflow if Java validation failed
        if: steps.java_check.outcome == 'failure'
        run: |
          echo "‚ùå Failing because Java test validation failed."
          exit 1